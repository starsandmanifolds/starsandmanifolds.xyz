name: "CI"

concurrency: "Production"

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

  workflow_dispatch:

jobs:
  checkov-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkov Scan
        uses: bridgecrewio/checkov-action@master

  # TODO: terrascan always fails due to not supporting the `terraform.cloud`
  # block just yet.

  # terrascan-scan:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Terrascan Scan
  #       uses: accurics/terrascan-action@v1
  #       with:
  #         iac_type: terraform
  #         iac_version: v15
  #         verbose: true

  tfsec-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: TFSec Scan
        run: docker run --rm --interactive --volume "$(pwd):/src" aquasec/tfsec-scratch /src

  terraform:
    environment: Production
    needs:
      - checkov-scan
      - tfsec-scan

    runs-on: ubuntu-latest
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      TF_VAR_dns_credentials: ${{ secrets.TF_VAR_DNS_CREDENTIALS }}
      TF_VAR_firewall_ssh_source_ranges: ${{ secrets.TF_VAR_FIREWALL_SSH_SOURCE_RANGES }}
      TF_VAR_ssh_keys: ${{ secrets.TF_VAR_SSH_KEYS }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        run: terraform fmt -check -recursive
        working-directory: terraform

      - name: Terraform Initialize
        run: terraform init
        working-directory: terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform

      - name: Terraform Plan
        run: terraform plan -out plan
        working-directory: terraform

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve "plan"
        working-directory: terraform
